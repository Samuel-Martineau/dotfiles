#+title: Emacs Configuration
#+property: header-args:emacs-lisp :tangle yes :results output none

* Editing
** General
#+begin_src emacs-lisp
  (electric-pair-mode)
  (delete-selection-mode t)
  (setopt frame-resize-pixelwise t)

  (require 'aggressive-indent)
  (global-aggressive-indent-mode)

  (require 'which-key)
  (which-key-mode)
#+end_src
** Completion
*** General
#+begin_src emacs-lisp
  (setopt completion-styles '(orderless)
          tab-always-indent 'complete)
#+end_src
*** LSP
#+begin_src emacs-lisp
  (require 'lsp-mode)
  (setopt lsp-keymap-prefix "C-c l")
  (add-hook 'nix-mode-hook #'lsp-deferred)
  (add-hook 'lsp-mode-hook #'lsp-enable-which-key-integration)
#+end_src
** Linting
#+begin_src emacs-lisp
  (require 'flycheck)

  (setopt flycheck-emacs-lisp-load-path 'inherit)

  (global-flycheck-mode)

  (defun disable-flycheck-in-org-src-block ()
    (setq-local flycheck-disabled-checkers '(emacs-lisp-checkdoc)))
  (add-hook 'org-src-mode-hook #'disable-flycheck-in-org-src-block)
#+end_src
** Org-Mode
#+begin_src emacs-lisp
  (setopt initial-major-mode 'org-mode
          initial-scratch-message "#+title: scratch buffer\n")
#+end_src
** Backups
#+begin_src emacs-lisp
  (setopt backup-by-copying t
          delete-old-versions t
          version-control t
          kept-new-versions 5
          kept-old-versions 2)

  (let ((backup-dir "~/.emacs.d/backups")
        (auto-saves-dir "~/.emacs.d/auto-saves"))
    (dolist (dir (list backup-dir auto-saves-dir))
      (when (not (file-directory-p dir))
        (make-directory dir t)))
    (setq backup-directory-alist `(("." . ,backup-dir))
          auto-save-file-name-transforms `((".*" ,auto-saves-dir t))
          auto-save-list-file-prefix (concat auto-saves-dir ".saves-")
          tramp-backup-directory-alist `((".*" . ,backup-dir))
          tramp-auto-save-directory auto-saves-dir))
#+end_src
* Appearance
** General
#+begin_src emacs-lisp
  (menu-bar-mode   -1)
  (tool-bar-mode   -1)
  (scroll-bar-mode -1)
  (pixel-scroll-precision-mode)
#+end_src
** Frame Parameters
#+begin_src emacs-lisp
  (add-to-list 'default-frame-alist '(alpha-background . 99)) ; Prevents white flicker on window opening or resize
#+end_src
** Theme
#+begin_src emacs-lisp
  (defvar my/favorite-themes '(gruvbox-dark-hard gruvbox-light-hard))

  (load-theme (car my/favorite-themes) t)

  (defun my/cycle-favorite-themes ()
    (interactive)
    (let* ((current-theme (car custom-enabled-themes))
           (next-theme (or (cadr (member current-theme my/favorite-themes))
                           (car my/favorite-themes))))
      (disable-theme current-theme)
      (load-theme next-theme t)
      (message "%s" next-theme)))

  (global-set-key (kbd "s-p") 'my/cycle-favorite-themes)
#+end_src
** File Tree

#+begin_src emacs-lisp
  (require 'treemacs)
  (setopt treemacs-position 'right)
#+end_src
** Org-Mode
#+begin_src emacs-lisp
  (custom-set-faces
   '(org-document-title ((t (:height 2.00))))
   '(org-level-1        ((t (:height 1.75))))
   '(org-level-2        ((t (:height 1.50))))
   '(org-level-3        ((t (:height 1.25)))))

  (setopt org-startup-indented t
          org-hide-leading-stars t
          org-hide-emphasis-markers t)

  (require 'org-superstar)
  (add-hook 'org-mode-hook #'org-superstar-mode)

  (require 'org-appear)
  (add-hook 'org-mode-hook #'org-appear-mode)
#+end_src
** Icons
#+begin_src emacs-lisp
  (require 'all-the-icons)

  (require 'all-the-icons-dired)
  (add-hook 'dired-mode-hook #'all-the-icons-dired-mode)

  (require 'all-the-icons-completion)
  (add-hook 'marginalia-mode-hook #'all-the-icons-completion-marginalia-setup)
#+end_src
** Completion
*** CoRFu
#+begin_src emacs-lisp
  (require 'corfu)
  (global-corfu-mode)
#+end_src
*** VertICo
#+begin_src emacs-lisp
  (require 'vertico)
  (setopt vertico-count 20
          vertico-resize nil
          vertico-cycle t)
  (vertico-mode)
#+end_src
*** Marginalia
#+begin_src emacs-lisp
  (require 'marginalia)
  (setopt marginalia-align 'left)
  (marginalia-mode)
#+end_src
* Other
** COMMENT Project Management
#+begin_src emacs-lisp
#+end_src
** Garbage Collection
#+begin_src emacs-lisp
  (setopt gc-cons-threshold (* 100 1024 1024))
#+end_src
